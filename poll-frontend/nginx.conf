# Basic Nginx config to serve React app and handle SPA routing

# Run as a non-privileged user
user nginx;
# Number of worker processes, 'auto' is usually good
worker_processes auto;
# Log errors to stderr (good for Docker logs)
error_log /var/log/nginx/error.log warn;
# Where Nginx stores process ID
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # Max connections per worker
}

http {
    # Define MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Improve performance and security
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off; # Hide Nginx version

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Access log configuration (write to stdout for Docker)
    access_log /dev/stdout;

    # Default server block
    server {
        listen 80;
        server_name localhost; # Adjust if needed

        # Root directory for static files (React build output)
        root /usr/share/nginx/html;
        index index.html index.htm;

        location / {
            # Try to serve the requested file directly, then directory,
            # otherwise fallback to index.html for SPA routing
            try_files $uri $uri/ /index.html;
        }

        # Optional: If you need Nginx to proxy API requests instead of K8s Ingress
        # Make sure the API service is resolvable (e.g., 'poll-api-svc' in K8s)
        # location /api/ {
        #    proxy_pass http://poll-api-svc:5000/; # K8s service name and port
        #    proxy_set_header Host $host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
        }

         # Health check endpoint for K8s liveness/readiness probes
        location = /healthz {
            access_log off; # Don't log health checks
            return 200 "healthy\n";
            # Add header to prevent caching
            add_header Content-Type text/plain;
        }
    }
}